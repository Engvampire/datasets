metadata:
    version: 1
    name: Music
    builder: 2
    author: Ryan Whitcomb <rwhit94@vt.edu>
    datetime: 5-18-16
    tags: [music, songs, artists, creativity, media]
    description:
        short: The Music library is a compilation of over one million contemporary songs and information about their audio features and metadata.
        overview: >
            This library comes from the Million Song Dataset, which used a company called the Echo Nest to derive data points about one million popular contemporary songs.  The Million Song Dataset is a collaboration between the Echo Nest and LabROSA, a laboratory working towards intelligent machine listening.  The project was also funded in part by the National Science Foundation of America (NSF) to provide a large data set to evaluate research related to algorithms on a commercial size while promoting further research into the Music Information Retrieval field.  The data contains standard information about the songs such as artist name, title, and year released.  Additionally, the data contains more advanced information; for example, the length of the song, how many musical bars long the song is, and how long the fade in to the song was.

        citation: Thierry Bertin-Mahieux, Daniel P.W. Ellis, Brian Whitman, and Paul Lamere. <br> The Million Song Dataset. In Proceedings of the 12th International Society <br> for Music Information Retrieval Conference (ISMIR 2011), 2011.
local:
  - file: music.json
    name: music
    row: music
    indexes:
      - name: title
        jsonpath: music.[0].song.title
      - name: artist
        jsonpath: music.[0].artist.name
interfaces:
  - name: get song by name
    description: Given the title of a song, returns information about the song.
    args:
      - name: title
        type: string
        default: "I Didn't Mean To"
        description: The title of the song.
        matches: SELECT DISTINCT title FROM music
    returns: music
    production:
        sql: SELECT data FROM music WHERE title=? LIMIT 1
        post: json()
  #- name: get rating by name
  #  description: A very simple method for getting the rating of a specific song.
  #  args:
  #    - name: title
  #      default: "I Didn't Mean To"
  #      type: string
  #      matches: SELECT DISTINCT title FROM music
  #      description: The title of the song.
  #  returns: float
  #  production:
  #      sql: SELECT data FROM music WHERE title=? LIMIT 1
  #      post: json()|jsonpath(song.hotttnesss)
  - name: get songs by artist
    description: Given the name of an artist, returns all the songs by that artist in the database.
    args:
      - name: artist
        default: "Aerosmith"
        type: string
        matches: SELECT DISTINCT artist FROM music
        description: The name of the artist or band.
    production:
        sql: SELECT data FROM music WHERE artist=?
        post: json()
    test:
        sql: SELECT data FROM music WHERE artist=? LIMIT {hardware}
        post: json()
    returns: list[music]
  - name: get songs
    returns: list[music]
    description: Gets a list of all the songs in the database.
    test:
        sql: SELECT data FROM music LIMIT {hardware}
        post: json()
    production:
        sql: SELECT data FROM music
        post: json()