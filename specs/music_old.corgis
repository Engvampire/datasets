metadata:
    version: 1
    name: Music
    builder: 2
    author: Austin Cory Bart <acbart@vt.edu>
    datetime: 9/23/2015
    tags: [music, songs, artists, creativity, media]
    description:
        short: The Music library has data about a multitude of songs and artists.
        overview: >
            The Music library has data about a multitude of songs and artists.
local:
  - file: music.json
    name: music
    row: music
    indexes:
      - name: title
        jsonpath: song.title
      - name: artist
        jsonpath: artist.name
interfaces:
  - name: get song by name
    description: Given the title of a song, returns information about the song.
    args:
      - name: title
        type: string
        default: "I Didn't Mean To"
        description: The title of the song.
        matches: SELECT DISTINCT title FROM music
    returns: music
    production:
        sql: SELECT data FROM music WHERE title=? LIMIT 1
        post: json()
  #- name: get rating by name
  #  description: A very simple method for getting the rating of a specific song.
  #  args:
  #    - name: title
  #      default: "I Didn't Mean To"
  #      type: string
  #      matches: SELECT DISTINCT title FROM music
  #      description: The title of the song.
  #  returns: float
  #  production:
  #      sql: SELECT data FROM music WHERE title=? LIMIT 1
  #      post: json()|jsonpath(song.hotttnesss)
  - name: get songs by artist
    description: Given the name of an artist, returns all the songs by that artist in the database.
    args:
      - name: artist
        default: "Aerosmith"
        type: string
        matches: SELECT DISTINCT artist FROM music
        description: The name of the artist or band.
    production:
        sql: SELECT data FROM music WHERE artist=?
        post: json()
    test:
        sql: SELECT data FROM music WHERE artist=? LIMIT {hardware}
        post: json()
    returns: list[music]
  - name: get songs
    returns: list[music]
    description: Gets a list of all the songs in the database.
    test:
        sql: SELECT data FROM music LIMIT {hardware}
        post: json()
    production:
        sql: SELECT data FROM music
        post: json()