#lang racket

; Load the internal libraries
(require htdp/error)
(require json)
(require racket/port)
(require racket/format)
(require net/url)
(require db)

(define database-name "immigration.db")
(define database (sqlite3-connect #:database database-name))
(define hardware-limit 1000)
(define test-mode false)

; Provide the external structs
(provide
    (struct-out naturalizations)
    (struct-out illegals)
    (struct-out permanants)
    (struct-out record)
    get-records
    main)

; Define the structs
(define-struct naturalizations
    (wyoming colorado guam washington rhode-island tennessee iowa nevada maine north-dakota mississippi south-dakota new-jersey oklahoma delaware minnesota north-carolina illinois new-york arkansas puerto-rico total indiana maryland louisiana idaho district-of-columbia arizona wisconsin michigan kansas utah virginia oregon connecticut montana california massachusetts alaska vermont georgia pennsylvania florida hawaii kentucky missouri nebraska new-hampshire texas west-virginia south-carolina ohio alabama new-mexico))

(define-struct illegals
    (wyoming colorado guam washington rhode-island tennessee iowa nevada maine north-dakota mississippi south-dakota new-jersey oklahoma delaware minnesota north-carolina illinois new-york arkansas puerto-rico total indiana maryland hawii louisiana idaho district-of-columbia arizona wisconsin michigan kansas utah virginia oregon connecticut montana california massachusetts alaska vermont georgia pennsylvania louisana florida hawaii kentucky missouri nebraska new-hampshire texas west-virginia south-carolina ohio alabama pennslyvania new-mexico))

(define-struct permanants
    (wyoming colorado guam washington rhode-island tennessee iowa nevada maine north-dakota mississippi south-dakota new-jersey oklahoma delaware minnesota north-carolina illinois new-york arkansas puerto-rico total indiana maryland louisiana idaho district-of-columbia arizona wisconsin michigan kansas utah virginia oregon connecticut montana california massachusetts alaska vermont georgia pennsylvania florida hawaii kentucky missouri nebraska new-hampshire texas west-virginia south-carolina ohio alabama new-mexico))

(define-struct record
    (illegals naturalizations permanants year))



; Define the JSON->Struct mappers
(define (json->naturalizations jdata)
    (make-naturalizations
        (hash-ref jdata (string->symbol "wyoming"))
            (hash-ref jdata (string->symbol "colorado"))
            (hash-ref jdata (string->symbol "guam"))
            (hash-ref jdata (string->symbol "washington"))
            (hash-ref jdata (string->symbol "rhode island"))
            (hash-ref jdata (string->symbol "tennessee"))
            (hash-ref jdata (string->symbol "iowa"))
            (hash-ref jdata (string->symbol "nevada"))
            (hash-ref jdata (string->symbol "maine"))
            (hash-ref jdata (string->symbol "north dakota"))
            (hash-ref jdata (string->symbol "mississippi"))
            (hash-ref jdata (string->symbol "south dakota"))
            (hash-ref jdata (string->symbol "new jersey"))
            (hash-ref jdata (string->symbol "oklahoma"))
            (hash-ref jdata (string->symbol "delaware"))
            (hash-ref jdata (string->symbol "minnesota"))
            (hash-ref jdata (string->symbol "north carolina"))
            (hash-ref jdata (string->symbol "illinois"))
            (hash-ref jdata (string->symbol "new york"))
            (hash-ref jdata (string->symbol "arkansas"))
            (hash-ref jdata (string->symbol "puerto rico"))
            (hash-ref jdata (string->symbol "total"))
            (hash-ref jdata (string->symbol "indiana"))
            (hash-ref jdata (string->symbol "maryland"))
            (hash-ref jdata (string->symbol "louisiana"))
            (hash-ref jdata (string->symbol "idaho"))
            (hash-ref jdata (string->symbol "district of columbia"))
            (hash-ref jdata (string->symbol "arizona"))
            (hash-ref jdata (string->symbol "wisconsin"))
            (hash-ref jdata (string->symbol "michigan"))
            (hash-ref jdata (string->symbol "kansas"))
            (hash-ref jdata (string->symbol "utah"))
            (hash-ref jdata (string->symbol "virginia"))
            (hash-ref jdata (string->symbol "oregon"))
            (hash-ref jdata (string->symbol "connecticut"))
            (hash-ref jdata (string->symbol "montana"))
            (hash-ref jdata (string->symbol "california"))
            (hash-ref jdata (string->symbol "massachusetts"))
            (hash-ref jdata (string->symbol "alaska"))
            (hash-ref jdata (string->symbol "vermont"))
            (hash-ref jdata (string->symbol "georgia"))
            (hash-ref jdata (string->symbol "pennsylvania"))
            (hash-ref jdata (string->symbol "florida"))
            (hash-ref jdata (string->symbol "hawaii"))
            (hash-ref jdata (string->symbol "kentucky"))
            (hash-ref jdata (string->symbol "missouri"))
            (hash-ref jdata (string->symbol "nebraska"))
            (hash-ref jdata (string->symbol "new hampshire"))
            (hash-ref jdata (string->symbol "texas"))
            (hash-ref jdata (string->symbol "west virginia"))
            (hash-ref jdata (string->symbol "south carolina"))
            (hash-ref jdata (string->symbol "ohio"))
            (hash-ref jdata (string->symbol "alabama"))
            (hash-ref jdata (string->symbol "new mexico"))
            ))

(define (json->illegals jdata)
    (make-illegals
        (hash-ref jdata (string->symbol "wyoming"))
            (hash-ref jdata (string->symbol "colorado"))
            (hash-ref jdata (string->symbol "guam"))
            (hash-ref jdata (string->symbol "washington"))
            (hash-ref jdata (string->symbol "rhode island"))
            (hash-ref jdata (string->symbol "tennessee"))
            (hash-ref jdata (string->symbol "iowa"))
            (hash-ref jdata (string->symbol "nevada"))
            (hash-ref jdata (string->symbol "maine"))
            (hash-ref jdata (string->symbol "north dakota"))
            (hash-ref jdata (string->symbol "mississippi"))
            (hash-ref jdata (string->symbol "south dakota"))
            (hash-ref jdata (string->symbol "new jersey"))
            (hash-ref jdata (string->symbol "oklahoma"))
            (hash-ref jdata (string->symbol "delaware"))
            (hash-ref jdata (string->symbol "minnesota"))
            (hash-ref jdata (string->symbol "north carolina"))
            (hash-ref jdata (string->symbol "illinois"))
            (hash-ref jdata (string->symbol "new york"))
            (hash-ref jdata (string->symbol "arkansas"))
            (hash-ref jdata (string->symbol "puerto rico"))
            (hash-ref jdata (string->symbol "total"))
            (hash-ref jdata (string->symbol "indiana"))
            (hash-ref jdata (string->symbol "maryland"))
            (hash-ref jdata (string->symbol "hawii"))
            (hash-ref jdata (string->symbol "louisiana"))
            (hash-ref jdata (string->symbol "idaho"))
            (hash-ref jdata (string->symbol "district of columbia"))
            (hash-ref jdata (string->symbol "arizona"))
            (hash-ref jdata (string->symbol "wisconsin"))
            (hash-ref jdata (string->symbol "michigan"))
            (hash-ref jdata (string->symbol "kansas"))
            (hash-ref jdata (string->symbol "utah"))
            (hash-ref jdata (string->symbol "virginia"))
            (hash-ref jdata (string->symbol "oregon"))
            (hash-ref jdata (string->symbol "connecticut"))
            (hash-ref jdata (string->symbol "montana"))
            (hash-ref jdata (string->symbol "california"))
            (hash-ref jdata (string->symbol "massachusetts"))
            (hash-ref jdata (string->symbol "alaska"))
            (hash-ref jdata (string->symbol "vermont"))
            (hash-ref jdata (string->symbol "georgia"))
            (hash-ref jdata (string->symbol "pennsylvania"))
            (hash-ref jdata (string->symbol "louisana"))
            (hash-ref jdata (string->symbol "florida"))
            (hash-ref jdata (string->symbol "hawaii"))
            (hash-ref jdata (string->symbol "kentucky"))
            (hash-ref jdata (string->symbol "missouri"))
            (hash-ref jdata (string->symbol "nebraska"))
            (hash-ref jdata (string->symbol "new hampshire"))
            (hash-ref jdata (string->symbol "texas"))
            (hash-ref jdata (string->symbol "west virginia"))
            (hash-ref jdata (string->symbol "south carolina"))
            (hash-ref jdata (string->symbol "ohio"))
            (hash-ref jdata (string->symbol "alabama"))
            (hash-ref jdata (string->symbol "pennslyvania"))
            (hash-ref jdata (string->symbol "new mexico"))
            ))

(define (json->permanants jdata)
    (make-permanants
        (hash-ref jdata (string->symbol "wyoming"))
            (hash-ref jdata (string->symbol "colorado"))
            (hash-ref jdata (string->symbol "guam"))
            (hash-ref jdata (string->symbol "washington"))
            (hash-ref jdata (string->symbol "rhode island"))
            (hash-ref jdata (string->symbol "tennessee"))
            (hash-ref jdata (string->symbol "iowa"))
            (hash-ref jdata (string->symbol "nevada"))
            (hash-ref jdata (string->symbol "maine"))
            (hash-ref jdata (string->symbol "north dakota"))
            (hash-ref jdata (string->symbol "mississippi"))
            (hash-ref jdata (string->symbol "south dakota"))
            (hash-ref jdata (string->symbol "new jersey"))
            (hash-ref jdata (string->symbol "oklahoma"))
            (hash-ref jdata (string->symbol "delaware"))
            (hash-ref jdata (string->symbol "minnesota"))
            (hash-ref jdata (string->symbol "north carolina"))
            (hash-ref jdata (string->symbol "illinois"))
            (hash-ref jdata (string->symbol "new york"))
            (hash-ref jdata (string->symbol "arkansas"))
            (hash-ref jdata (string->symbol "puerto rico"))
            (hash-ref jdata (string->symbol "total"))
            (hash-ref jdata (string->symbol "indiana"))
            (hash-ref jdata (string->symbol "maryland"))
            (hash-ref jdata (string->symbol "louisiana"))
            (hash-ref jdata (string->symbol "idaho"))
            (hash-ref jdata (string->symbol "district of columbia"))
            (hash-ref jdata (string->symbol "arizona"))
            (hash-ref jdata (string->symbol "wisconsin"))
            (hash-ref jdata (string->symbol "michigan"))
            (hash-ref jdata (string->symbol "kansas"))
            (hash-ref jdata (string->symbol "utah"))
            (hash-ref jdata (string->symbol "virginia"))
            (hash-ref jdata (string->symbol "oregon"))
            (hash-ref jdata (string->symbol "connecticut"))
            (hash-ref jdata (string->symbol "montana"))
            (hash-ref jdata (string->symbol "california"))
            (hash-ref jdata (string->symbol "massachusetts"))
            (hash-ref jdata (string->symbol "alaska"))
            (hash-ref jdata (string->symbol "vermont"))
            (hash-ref jdata (string->symbol "georgia"))
            (hash-ref jdata (string->symbol "pennsylvania"))
            (hash-ref jdata (string->symbol "florida"))
            (hash-ref jdata (string->symbol "hawaii"))
            (hash-ref jdata (string->symbol "kentucky"))
            (hash-ref jdata (string->symbol "missouri"))
            (hash-ref jdata (string->symbol "nebraska"))
            (hash-ref jdata (string->symbol "new hampshire"))
            (hash-ref jdata (string->symbol "texas"))
            (hash-ref jdata (string->symbol "west virginia"))
            (hash-ref jdata (string->symbol "south carolina"))
            (hash-ref jdata (string->symbol "ohio"))
            (hash-ref jdata (string->symbol "alabama"))
            (hash-ref jdata (string->symbol "new mexico"))
            ))

(define (json->record jdata)
    (make-record
        (json->illegals (hash-ref jdata (string->symbol "illegals")))
                (json->naturalizations (hash-ref jdata (string->symbol "naturalizations")))
                (json->permanants (hash-ref jdata (string->symbol "permanants")))
                (hash-ref jdata (string->symbol "year"))
            ))



; Define the services, and their helpers

(define (get-records ) 
(let* [(result (query-list database 
                                   "SELECT data FROM immigration"
                                ))
               (result (map string->jsexpr result))
               ]
           (map json->record result)
           )
)


(define (main)
    (displayln "Running tests")
    
    (displayln "Production get-records")
    (displayln (length (time (get-records ))))
    
    

    )